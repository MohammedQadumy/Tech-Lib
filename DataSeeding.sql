-- Seeding 1000 Books using CROSS JOIN to generate numbers 1 to 1000
WITH Numbers AS (
    SELECT TOP (1000) ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS n
    FROM sys.all_objects
)
INSERT INTO BOOKS (BOOKID, TITLE, AUTHOR, ISBN, PUBLISHED_DATE, GENRE, SHELF_LOCATION, CURRENT_STATUS)
SELECT 
    n AS BOOKID,
    'Title ' + CAST(n AS VARCHAR(10)) AS TITLE,
    'Author ' + CAST(n AS VARCHAR(10)) AS AUTHOR,
    '978-3-' + CAST(CAST(RAND(CHECKSUM(NEWID())) * 1000000 AS INT) AS VARCHAR(6)) AS ISBN,
    DATEADD(DAY, -CAST(RAND(CHECKSUM(NEWID())) * 3650 AS INT), GETDATE()) AS PUBLISHED_DATE, -- Random date in last 10 years
    CASE WHEN RAND(CHECKSUM(NEWID())) < 0.5 THEN 'Fiction' ELSE 'Non-fiction' END AS GENRE,
    'A-' + CAST(CAST(RAND(CHECKSUM(NEWID())) * 50 AS INT) AS VARCHAR(2)) AS SHELF_LOCATION,
    CASE WHEN RAND(CHECKSUM(NEWID())) < 0.8 THEN 'A' ELSE 'I' END AS CURRENT_STATUS  -- A for Available, I for Issued
FROM Numbers;



-- Seeding 1000 Borrowers using the same Numbers CTE
WITH Numbers AS (
    SELECT TOP (1000) ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS n
    FROM sys.all_objects
)
INSERT INTO BORROWERS (BORROWERID, FIRST_NAME, LAST_NAME, EMAIL, DATE_OF_BIRTH, MEMPERSHIP_DATE)
SELECT 
    n AS BORROWERID,
    'FirstName' + CAST(n AS VARCHAR(10)) AS FIRST_NAME,
    'LastName' + CAST(n AS VARCHAR(10)) AS LAST_NAME,
    'user' + CAST(n AS VARCHAR(10)) + '@example.com' AS EMAIL,
    DATEADD(YEAR, -CAST(RAND(CHECKSUM(NEWID())) * 40 + 20 AS INT), GETDATE()) AS DATE_OF_BIRTH,  -- Random age between 20-60
    DATEADD(DAY, -CAST(RAND(CHECKSUM(NEWID())) * 730 AS INT), GETDATE()) AS MEMPERSHIP_DATE  -- Random membership date in last 2 years
FROM Numbers;


-- Seeding 1000 Loans using the same Numbers CTE
WITH Numbers AS (
    SELECT TOP (1000) ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS n
    FROM sys.all_objects
)
INSERT INTO LOANS (LOANID, BOOKID, BORROWERID, DATE_BORROWED, DUE_DATE, DATE_RETURNED)
SELECT 
    n AS LOANID,
    CAST(RAND(CHECKSUM(NEWID())) * 1000 + 1 AS INT) AS BOOKID,  -- Random BookID between 1-1000
    CAST(RAND(CHECKSUM(NEWID())) * 1000 + 1 AS INT) AS BORROWERID,  -- Random BorrowerID between 1-1000
    DATEADD(DAY, -CAST(RAND(CHECKSUM(NEWID())) * 30 AS INT), GETDATE()) AS DATE_BORROWED,  -- Borrowed in the last 30 days
    DATEADD(DAY, 14, GETDATE()) AS DUE_DATE,  -- Due in 14 days
    CASE 
        WHEN RAND(CHECKSUM(NEWID())) < 0.5 THEN DATEADD(DAY, -CAST(RAND(CHECKSUM(NEWID())) * 14 AS INT), GETDATE()) 
        ELSE NULL 
    END AS DATE_RETURNED  -- 50% chance of being returned
FROM Numbers;
